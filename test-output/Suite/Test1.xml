<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-OQCH81E" failures="1" tests="1" name="Test1" time="0.802" errors="0" timestamp="2024-12-09T16:10:03 IST">
  <testcase classname="appiumpack1.serverStart_ToastTest" name="generalstore1" time="0.798">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: UiAutomator2 Server cannot start because the local port #8200 is busy. Make sure the port you provide via &amp;apos;systemPort&amp;apos; capability is not occupied. This situation might often be a result of an inaccurate sessions management, e.g. old automation sessions on the same device must always be closed before starting new ones. 
Host info: host: &amp;apos;DESKTOP-OQCH81E&amp;apos;, ip: &amp;apos;10.10.21.133&amp;apos;
Build info: version: &amp;apos;4.13.0&amp;apos;, revision: &amp;apos;ba948ece5b*&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.3&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:UDID=1360431040000HV, appium:appActivity=com.androidsample.generalstore.MainActivity, appium:appPackage=com.androidsample.generalstore, appium:autoGrantPermissions=true, appium:automationName=uiautomator2, appium:deviceName=vivo V21e 5G, appium:noReset=true, platformName=ANDROID, appium:systemPort=8200}], desiredCapabilities=Capabilities {UDID: 1360431040000HV, appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, autoGrantPermissions: true, automationName: uiautomator2, deviceName: vivo V21e 5G, noReset: true, platformName: ANDROID, systemPort: 8200}}]
Capabilities {UDID: 1360431040000HV, appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, autoGrantPermissions: true, automationName: uiautomator2, deviceName: vivo V21e 5G, noReset: true, platformName: ANDROID, systemPort: 8200}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: UiAutomator2 Server cannot start because the local port #8200 is busy. Make sure the port you provide via 'systemPort' capability is not occupied. This situation might often be a result of an inaccurate sessions management, e.g. old automation sessions on the same device must always be closed before starting new ones. 
Host info: host: 'DESKTOP-OQCH81E', ip: '10.10.21.133'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:UDID=1360431040000HV, appium:appActivity=com.androidsample.generalstore.MainActivity, appium:appPackage=com.androidsample.generalstore, appium:autoGrantPermissions=true, appium:automationName=uiautomator2, appium:deviceName=vivo V21e 5G, appium:noReset=true, platformName=ANDROID, appium:systemPort=8200}], desiredCapabilities=Capabilities {UDID: 1360431040000HV, appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, autoGrantPermissions: true, automationName: uiautomator2, deviceName: vivo V21e 5G, noReset: true, platformName: ANDROID, systemPort: 8200}}]
Capabilities {UDID: 1360431040000HV, appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, autoGrantPermissions: true, automationName: uiautomator2, deviceName: vivo V21e 5G, noReset: true, platformName: ANDROID, systemPort: 8200}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at appiumpack1.serverStart_ToastTest.generalstore1(serverStart_ToastTest.java:41)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- generalstore1 -->
</testsuite> <!-- Test1 -->
